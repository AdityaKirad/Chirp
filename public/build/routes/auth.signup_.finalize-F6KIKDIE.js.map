{
  "version": 3,
  "sources": ["../../../app/routes/auth.signup_.finalize/credentials.tsx", "../../../app/routes/auth.signup_.finalize/schema.ts", "../../../app/routes/auth.signup_.finalize/route.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\auth.signup_.finalize\\\\\\\\credentials.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\auth.signup_.finalize\\\\credentials.tsx\");\n  import.meta.hot.lastModified = \"1720178127438.473\";\n}\n// REMIX HMR END\n\nimport { getInputProps } from \"@conform-to/react\";\nimport { Field, FieldError } from \"~/components/create-account\";\nimport { Input, Label, PasswordInput } from \"~/components/ui\";\nexport function Credentials({\n  fields\n}) {\n  return <>\r\n      <Field>\r\n        <Label htmlFor={fields.username.id}>Username</Label>\r\n        <Input {...getInputProps(fields.username, {\n        type: \"text\"\n      })} placeholder=\"Username\" />\r\n        <FieldError>{fields.username.errors?.join(\", \")}</FieldError>\r\n      </Field>\r\n      <Field>\r\n        <Label htmlFor={fields.password.id}>Password</Label>\r\n        <PasswordInput {...getInputProps(fields.password, {\n        type: \"text\"\n      })} placeholder=\"Password\" />\r\n        <FieldError>{fields.password.errors?.join(\", \")}</FieldError>\r\n      </Field>\r\n      <Field>\r\n        <Label htmlFor={fields.confirmPassword.id}>Confirm Password</Label>\r\n        <PasswordInput {...getInputProps(fields.confirmPassword, {\n        type: \"text\"\n      })} placeholder=\"Confirm Password\" />\r\n        <FieldError>{fields.confirmPassword.errors?.join(\", \")}</FieldError>\r\n      </Field>\r\n    </>;\n}\n_c = Credentials;\nvar _c;\n$RefreshReg$(_c, \"Credentials\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app\\\\routes\\\\auth.signup_.finalize\\\\schema.ts\"\n);\nimport.meta.hot.lastModified = \"1720166776253.8508\";\n}\n// REMIX HMR END\n\nimport { type Intent } from \"@conform-to/react\";\r\nimport { conformZodMessage } from \"@conform-to/zod\";\r\nimport { z } from \"zod\";\r\n\r\nconst usernameRegex = /^[a-zA-Z][a-zA-Z0-9_]*$/;\r\nconst passwordRegex = /^(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*()_+\\-=\\\\[\\]{};':\"\\\\|,.<>\\\\/?])/;\r\n\r\nexport function createSchema(\r\n  intent: Intent | null,\r\n  options?: { isUsernameTaken?: (username: string) => Promise<boolean> },\r\n) {\r\n  return z\r\n    .object({\r\n      username: z\r\n        .string()\r\n        .min(4, \"Must be at least 4 characters\")\r\n        .max(15, \"Cannot exceed 15 characters\")\r\n        .regex(usernameRegex, \"Must start with letter, only letters, numbers & underscores allowed\")\r\n        .refine((val) => !val.toLowerCase().includes(\"twitter\"), \"Cannot contain 'twitter'\")\r\n        .refine((val) => !val.toLowerCase().includes(\"admin\"), \"Cannot contain 'admin'\")\r\n        .refine((val) => !val.toLowerCase().endsWith(\"com\"), \"Cannot end with 'com'\")\r\n        .pipe(\r\n          z.string().superRefine((username, ctx) => {\r\n            const isValidatingUsername =\r\n              intent === null || (intent.type === \"validate\" && intent.payload.name === \"username\");\r\n\r\n            if (!isValidatingUsername) {\r\n              ctx.addIssue({\r\n                code: \"custom\",\r\n                message: conformZodMessage.VALIDATION_SKIPPED,\r\n              });\r\n              return;\r\n            }\r\n\r\n            if (typeof options?.isUsernameTaken !== \"function\") {\r\n              ctx.addIssue({\r\n                code: \"custom\",\r\n                message: conformZodMessage.VALIDATION_UNDEFINED,\r\n                fatal: true,\r\n              });\r\n              return;\r\n            }\r\n\r\n            return options.isUsernameTaken(username).then((isTaken) => {\r\n              if (isTaken) {\r\n                ctx.addIssue({\r\n                  code: \"custom\",\r\n                  message: \"Username already taken\",\r\n                });\r\n              }\r\n            });\r\n          }),\r\n        ),\r\n      password: z\r\n        .string()\r\n        .min(8, \"Must be at least 8 characters\")\r\n        .regex(passwordRegex, \"Must contain at least one uppercase letter, one number, and one special character\"),\r\n      confirmPassword: z.string(),\r\n    })\r\n    .refine((data) => !(data.password !== data.confirmPassword), {\r\n      message: \"Password's don't match\",\r\n      path: [\"confirmPassword\"],\r\n    });\r\n}\r\n\r\nexport type CredentialsSchema = z.infer<ReturnType<typeof createSchema>>;\r\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\auth.signup_.finalize\\\\\\\\route.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\auth.signup_.finalize\\\\route.tsx\");\n  import.meta.hot.lastModified = \"1720178203439.7688\";\n}\n// REMIX HMR END\n\n// import { Credentials } from \"~/components/create-account\";\nimport { Credentials } from \"./credentials\";\n// import { CredentialsSchema as schema } from \"~/lib/schema\";\nimport { createSchema } from \"./schema\";\nimport { useForm } from \"@conform-to/react\";\nimport { parseWithZod } from \"@conform-to/zod\";\nimport { Form, json, useActionData, useLoaderData, useNavigation } from \"@remix-run/react\";\nimport AuthLayout from \"~/components/auth-layout\";\nimport { Button, Loader } from \"~/components/ui\";\nimport { db } from \"~/services/db.server\";\nexport const loader = async () => {\n  const password1 = await Bun.password.hash(\"aditya\");\n  const password2 = await Bun.password.hash(\"aditya\");\n  const isSame = password1 === password2;\n  return json({\n    password1,\n    password2,\n    isSame\n  });\n};\nexport const action = async ({\n  request\n}) => {\n  const formData = await request.formData();\n  const submission = await parseWithZod(formData, {\n    schema: intent => createSchema(intent, {\n      async isUsernameTaken(username) {\n        const isUsernameTaken = await db.user.findUnique({\n          where: {\n            username\n          },\n          select: {\n            id: true\n          }\n        });\n        return isUsernameTaken ? true : false;\n      }\n    }),\n    async: true\n  });\n  if (submission.status !== \"success\") return json(submission.reply());\n  return null;\n};\nexport default function Page() {\n  _s();\n  const loaderData = useLoaderData();\n  console.log(loaderData);\n  const lastResult = useActionData();\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === \"submitting\";\n  const [form, fields] = useForm({\n    id: \"signup\",\n    lastResult,\n    shouldValidate: \"onBlur\",\n    shouldRevalidate: \"onInput\",\n    onValidate({\n      formData\n    }) {\n      return parseWithZod(formData, {\n        schema: intent => createSchema(intent)\n      });\n    }\n  });\n  return <AuthLayout title=\"Setup your account\">\r\n      <Form className=\"flex flex-col gap-2\" method=\"POST\" id={form.id} onSubmit={form.onSubmit} autoComplete=\"off\" noValidate>\r\n        <Credentials fields={fields} />\r\n        <Button className=\"rounded-full\" type=\"submit\" disabled={!form.valid || isSubmitting}>\r\n          {isSubmitting ? <Loader /> : \"Next\"}\r\n        </Button>\r\n      </Form>\r\n    </AuthLayout>;\n}\n_s(Page, \"nyFcvVE/WCXCyHygkJSAJR9sJHU=\", false, function () {\n  return [useLoaderData, useActionData, useNavigation, useForm];\n});\n_c = Page;\nvar _c;\n$RefreshReg$(_c, \"Page\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "_c"]
}
